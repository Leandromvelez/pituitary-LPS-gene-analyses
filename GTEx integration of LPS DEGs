
##############################################################################################
##Intersect with GTEx

load('G:/My Drive/lab files/sex-difference myokine study/GTEx NA included env.RData')
working_dataset=GTEx_subfiltered
row.names(working_dataset) = working_dataset$gene_tissue
working_dataset$gene_tissue=NULL
working_dataset = as.data.frame(t(working_dataset))
working_dataset[1:5,1:5]
test1 = working_dataset[,grepl('ITIH5', colnames(working_dataset))]
colnames(test1)
orths_table = read.delim('G:/My Drive/Datasets/Mouse/genome files/Mouse Gene info with Human Orthologues.txt')
res1$deg_sig_stringent = ifelse(res1$adj.P.Val<0.05, 'LPS DE Significant', 'NS')
sig_set = res1[res1$deg_sig_stringent=='LPS DE Significant',]
sig_set$human_orth = orths_table$human_orth[match(sig_set$ID, orths_table$Symbol)]
sig_set = sig_set[!is.na(sig_set$human_orth),]
gene_set = paste0(sig_set$human_orth, '_Pituitary')

setwd('G:/My Drive/lab files/Dequina Nicholas/networks from LPS-treated pituitary/pan-tissue DEG enrichments GTEx')
#_Pituitary
isogenes = working_dataset[,colnames(working_dataset) %in% gene_set]
ii = na.omit(isogenes)

#correlation network
bics_map = bicorAndPvalue(ii, ii, use ='p')
map1 = as.data.frame(bics_map$bicor)
map1 = melt(as.matrix(map1))
map1$value[map1$value > 0.999999] <- 0
map1 = na.omit(map1)
map2 = dcast(map1, Var1 ~ Var2, value.var = 'value')
row.names(map2) = map2$Var1
map2$Var1 = NULL
#map2 = na.omit(map2)
col_scheme = gsub(".*_","",colnames(map2))
tt1 = met.brewer('Tara', length(unique(col_scheme)))
names(tt1) = unique(col_scheme)
names(col_scheme) = tt1[match(col_scheme, names(tt1))]
pdf(file = paste0('DEG internal network structure ALL DEGS.pdf'))
qgraph(map2, minimum = 0.6, cut = 0.9, vsize = 1, legend = F, borders = FALSE, layout='spring', posCol = "dodgerblue3", color=names(col_scheme), negCol = "firebrick3", label.cex=F, directed=F, labels = F)
dev.off()

res.pca1 <- prcomp(t(ii), scale = F)
pdf(file = 'PCA variance contribution of individual DEGs.pdf')
fviz_pca_ind(res.pca1, col.ind = "cos2",
             gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
             repel = TRUE # Avoid text overlapping (slow if many points)
)
dev.off()

tt2 = as.data.frame(res.pca1$x)
new_df = as.data.frame(cbind(row.names(tt2), tt2$PC1))
colnames(new_df) = c('DEGgene_tissue', 'PC1_contr')
new_df = na.omit(new_df)
new_df$PC1_contr = as.numeric(new_df$PC1_contr)
new_df$Zscore_PC = (new_df$PC1_contr-mean(new_df$PC1_contr))/sd(new_df$PC1_contr)
new_df = new_df[order(abs(new_df$Zscore_PC), decreasing = T),]
write.csv(new_df, file = 'PC1 DEG contributions ordered.csv')


res.pca <- prcomp(ii, scale = F)
pdf(file = 'PCA variance explained by PC of DEGs.pdf')
fviz_eig(res.pca)
dev.off()


pc_vet = as.data.frame(res.pca$x)
vec1 = as.data.frame(pc_vet$PC1)
row.names(vec1) = row.names(pc_vet)

tissue1 <- working_dataset[,grepl('Adipose - Subcutaneous', colnames(working_dataset)) | grepl('Adipose - Visceral (Omentum)', colnames(working_dataset), fixed=T) | grepl('Small Intestine - Terminal Ileum', colnames(working_dataset), fixed=T) | grepl('Stomach', colnames(working_dataset), fixed=T) | grepl('Thyroid', colnames(working_dataset), fixed=T) | grepl('Pancreas', colnames(working_dataset), fixed=T) | grepl('Muscle - Skeletal', colnames(working_dataset), fixed=T) | grepl('Pituitary', colnames(working_dataset), fixed=T) | grepl('Liver', colnames(working_dataset), fixed=T) | grepl('Kidney - Cortex', colnames(working_dataset), fixed=T) | grepl('Heart - Left Ventricle', colnames(working_dataset), fixed=T) | grepl('Colon - Sigmoid', colnames(working_dataset), fixed=T) | grepl('Adrenal Gland', colnames(working_dataset), fixed=T) |  grepl('Artery - Aorta', colnames(working_dataset), fixed=T),]


new_working = tissue1[row.names(tissue1) %in% row.names(vec1),]
#new_working = new_working[,!grepl(origin_tissue, colnames(new_working), fixed=T)]

full_cors = bicorAndPvalue(vec1$`pc_vet$PC1`, new_working, use = 'p')
cor_table = melt(full_cors$bicor)
cor_table$Var1=NULL
colnames(cor_table) = c('gene_tissue', 'bicor')
new_p = melt(full_cors$p)

cor_table$pvalue = new_p$value[match(cor_table$gene_tissue, new_p$Var2)]
cor_table = na.omit(cor_table)
qest = qvalue(cor_table$pvalue)
cor_table$qvalue = qest$qvalues
cor_table$gene_symbol = gsub("\\_.*","",cor_table$gene_tissue)
cor_table$tissue = gsub(".*_","",cor_table$gene_tissue)
cor_table = cor_table[!is.na(cor_table$tissue),]
tissue_col = met.brewer('Tara', length(unique(cor_table$tissue)))
names(tissue_col) = unique(cor_table$tissue)
cor_table$tissue_col = tissue_col[match(cor_table$tissue, names(tissue_col))]
cor_table = cor_table[order(cor_table$pvalue, decreasing = F),]

res1 = cor_table[cor_table$pvalue<0.01,]
res1 = na.omit(res1)
write.csv(res1, file = 'significant crosstissue enrichments with DEG PC1 - origin included.csv', row.names = F)

sig_table = cor_table[cor_table$qvalue<0.1,]
sig_table$qcat =ifelse(sig_table$qvalue<0.01, 'q<0.01', 'q<0.1')
sig_table$qcat =ifelse(sig_table$qvalue<0.0001, 'q<0.0001', paste0(sig_table$qcat))
table(sig_table$qcat)

blank_theme <- theme_minimal()+
  theme(
    axis.title.x = element_blank(),
    axis.title.y = element_blank(),
    panel.border = element_blank(),
    panel.grid=element_blank(),
    axis.ticks = element_blank(),
    plot.title=element_text(size=25, face="bold")
  )

binned_sig_prots= sig_table %>%
  dplyr::group_by(tissue, qcat) %>%
  dplyr::summarise(n = n()) %>%
  dplyr::mutate(freq = n / sum(n))

pdf(file = 'crosstissue gene enrichments - including origin.pdf')
ggplot(binned_sig_prots, aes(x = "", y = freq, fill =tissue)) + 
  geom_bar(stat = "identity", width = 1, position = position_fill()) + blank_theme + theme(plot.title=element_text(size=25, face="bold")) +
  theme(axis.text.x=element_blank())+ scale_fill_manual(values=met.brewer('Moreau', length(unique(sig_table$tissue)))) +
  coord_polar(theta = "y") + 
  facet_wrap( ~ qcat)
dev.off()


#########################################################
#look at candidate secreted proteins
sec_prots = read.delim('G:/My Drive/Datasets/Human/genome files/human secreted proteins.tab')
nn1 = cor_table[cor_table$gene_symbol %in% sec_prots$Gene.names...primary..,]
head(cor_table)
nn1 = nn1[1:20,]
library(forcats)
pdf(file = 'candidate secreted proteins.pdf')
ggplot(nn1, aes(x=fct_reorder(gene_tissue, -log10(pvalue), .desc = TRUE), y=-log10(pvalue))) + theme_classic() + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) + geom_col(fill=fct_reorder(nn1$tissue_col, -log10(nn1$pvalue), .desc = TRUE)) + xlab('') + geom_hline(yintercept=2,linetype=2)
dev.off()

